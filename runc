#!/bin/bash

run="true"
separateFiles="false"
outputFile=""
readingInput="true"
memoryAnalysis="false"

while [ "$readingInput" = "true" -a -n "$1" ]; do
	case $1 in
		-s | --separate )	
			separateFiles=false
			;;

		-o | --output )
			shift
			outputFile="$1"
			;;

		-b | --build-only )
			run="false"
			;;

		-v | --valgrind )
			memoryAnalysis="true"
			;;
			
		* )
			readingInput="false"
			;;
	esac
	if [ $readingInput = true ]; then
		shift
	fi
done

if [ -z $1 ]; then
	echoerr "No files entered"
else
	if [ ! -d build ]; then
		mkdir build
	fi
	if [ $separateFiles = true ]; then
		while [ -n "$1" ]; do
			if [[ "$1" == *.c ]]; then
				outputFile="build/$(echo $1 | cut -d . -f 1).exe"
				gcc -Wall -Wextra -Werror -pedantic -std=gnu89 $1 -o $outputFile
				if [ $? -ne 0 ]; then
					echo ""
					echoerr "compilation failed"
					echo ""
				else	
					echogreen "\nStarting $1..."
					if [ $memoryAnalysis = true ]; then
						valgrind ./$outputFile
						echo
					else
						./$outputFile
						echo
					fi
				fi
			else
				echoerr "$1 is not a valid file"
			fi
			shift
		done
	else
		[ -z $outputFile ] && outputFile="main.exe"
		outputFile="build/$outputFile"
		gcc -Wall -Wextra -Werror -pedantic -std=gnu89 $@ -o $outputFile
		if [ $? -ne 0 ]; then
			echo
			echoerr "compilation failed"
			echo
		else
			echogreen "\nStarting $1..."
				if [ $memoryAnalysis = true ]; then
					valgrind ./$outputFile
				else
					./$outputFile
				fi
			echo
		fi
	fi
fi

